#
# Dockerfile for building all 3 containers provisioned by Ansible.
#
# Run with --build-arg tags=provision for base image build
#

ARG from_image

FROM ${from_image}

ARG ansible_version='2.3.3.0'

LABEL maintainer "Mariano Barcia <mariano.barcia@gmail.com>"

COPY ./ansible/requirements.yml /drupsible/ansible/requirements.yml

WORKDIR /drupsible

RUN apt-get update && apt-get install -y \
  curl \
#  docker-ce python-docker \
  git \
  libssl-dev \
  libreadline-gplv2-dev \
  libffi-dev \
  python \
  python-dev \
  python-mysqldb \
  python-setuptools \
  python-pip \
  python-netaddr \
  unzip \
  zlib1g-dev \
# Debops reqs
  libldap2-dev \
  libsasl2-dev
  
# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*# Make sure setuptools are installed correctly.

RUN python -m pip install --upgrade setuptools setupext-pip
# Upgrade criptography before pyOpenSSL
RUN python -m pip install --upgrade 'cryptography>2.1.4'
# Install pyOpenSSL before pip
RUN python -m easy_install --upgrade pyOpenSSL
RUN python -m pip install --upgrade pip
RUN python -m pip install --upgrade --no-cache-dir paramiko PyYAML Jinja2 httplib2 six markupsafe
RUN python -m pip install ansible==${ansible_version}

# DebOps
RUN python -m pip install debops
RUN ansible-galaxy install -f -r /drupsible/ansible/requirements.yml

ENTRYPOINT ansible-galaxy install -f -r /drupsible/ansible/requirements.yml && \
ansible-playbook ${VERBOSE} \
  --inventory "${INVENTORY}"\
  --tags "${TAGS}"\
  --skip-tags "${SKIP_TAGS}"\
  --extra-vars "app_name=${APP_NAME} app_target=local app_in_cloud=yes app_in_container=yes"\
  /drupsible/ansible/playbooks/${PLAYBOOK}
