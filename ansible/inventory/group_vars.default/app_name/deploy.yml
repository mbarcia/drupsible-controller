---
#
# Configuration file for the deploy/webserver group of ALL the environments.
#

#
# drupsible.deploy defaults
#
# Set by configure.sh
deploy_files_sync_enabled: False

# Set by configure.sh
deploy_install_profile_enabled: False
deploy_d_o_install_profile: ''
deploy_custom_install_profile: ''

# Set by configure.sh
deploy_drush_make_enabled: False
deploy_drush_makefile: ''
deploy_composer_enabled: ''

# Set by configure.sh
deploy_codebase_tarball_filename: ''
deploy_codebase_import_enabled: no

# Set by configure.sh
deploy_site_install_enabled: False

# Do not touch module's on/off
deploy_modules_present_env: []
# devel module should always be disabled in PROD
deploy_modules_absent_env: [ 'devel' ]
deploy_modules_present_app: []
deploy_modules_absent_app: []

#
# Upstream host to sync db/files with
#
# Set by configure.sh
deploy_db_sync_enabled: False
deploy_upstream_remote_host: ""
deploy_upstream_remote_port: ""
deploy_upstream_remote_user: ""
deploy_upstream_docroot: ""
deploy_upstream_files_path: "sites/default/files"
# Advanced upstream host configuration
# Set by configure.sh
deploy_upstream_proxy_port: ""
deploy_upstream_proxy_credentials: ""
deploy_upstream_ssh_options: ""

#
# Drupal settings
#
# Set by configure.sh
deploy_db_dump_filename: ''
deploy_db_import_enabled:

# Set by configure.sh
deploy_files_tarball_filename:
deploy_files_import_enabled:

# Set by configure.sh
deploy_git_repo_protocol: ''
deploy_git_repo_server: ''
deploy_git_repo_user: ''
deploy_git_repo_path: ''
deploy_git_repo_version: ''
# The root folder needs to be prefixed with a slash, like '/www'
deploy_codebase_root_folder: ''

#
# drupsible.apache2 defaults
#

apache2_modules:
- alias
- auth_basic
- authn_file
- authz_host
- authz_user
- autoindex
- deflate
- dir
- env
- expires
- mime
- negotiation
- reqtimeout
- rewrite
- setenvif
- status

apache2_mod_php5_packages_ontop:
- php-pear
- php-soap
- php5-curl
- php5-gd
- php5-gmp
- php5-mcrypt
- php5-memcache
- php5-mysqlnd
- newrelic-php5

apache2_mod_php_post_max_size: "32M"
apache2_mod_php_upload_max_filesize: "32M"
apache2_mod_php_timezone: "Europe/Madrid"
apache2_mod_php_memory_limit: "256M"

# This setting in None totally voids .htaccess effects
apache2_allow_override_htaccess: None

#
# PHP defaults
#

php__packages:
# Add xml in Xenial if you need PECL (like when downgrading to PHP 5.6)
#- xml
- php-pear
- php-soap
- gmp
- mysqlnd

php__post_max_size: '32M'

php__default_pm_status: True
php__default_pm_status_path: "{{ app_fpm_status_path | default('/fpm-status')}}"
php__default_ping_path: "{{ app_fpm_ping_path | default('/ping') }}"
php__production: "{{ (app_target|default('prod') == 'prod')|ternary(True, False) }}"

php__values:
  memory_limit: 192M
  newrelic.appname: "{{ app_name|quote }}"
  newrelic.license: "{{ newrelic_license_key|default(False)|ternary(newrelic_license_key, 'NO_NEWRELIC_LICENSE_KEY')|quote }}"
  max_input_vars: 2000
  # The following settings for PHP 5.5+ are based on https://goo.gl/AsDmgt
  opcache.memory_consumption: 64
  opcache.max_accelerated_files: 6000
  opcache.max_wasted_percentage: 10

php__flags:
  cgi.fix_path_info: 1
  # The following settings for PHP 5.5+ are based on https://goo.gl/AsDmgt
  opcache.validate_timestamps: "{{ (app_target|default('prod') != 'prod') | ternary('True', 'False') }}"
  opcache.fast_shutdown: 1

#
# Blackfire.io defaults
#
# By default, blackfire in prod is disabled
deploy_blackfire_enabled: False

blackfire_user: "{{ app_user }}"
blackfire_group: "{{ app_group }}"

# Sets the server id used to authenticate with Blackfire API
# Set this value in ansible/playbooks/group_vars/{app_name}/deploy.yml
#blackfire_server_id: __CHANGE_THIS_VALUE__

# Sets the server token used to authenticate with Blackfire API. It is unsafe to set this from the command line
# Set this value in ansible/playbooks/group_vars/{app_name}/deploy.yml
#blackfire_server_token: __CHANGE_THIS_VALUE__

# Sets the client id used by the CLI tool to authenticate with Blackfire API
# Set this value in ansible/playbooks/group_vars/{app_name}/deploy.yml
#blackfire_client_id: __CHANGE_THIS_VALUE__

# Sets the client token used by the CLI tool to authenticate with Blackfire API
# Set this value in ansible/playbooks/group_vars/{app_name}/deploy.yml
#blackfire_client_token: __CHANGE_THIS_VALUE__

# Log verbosity level (4: debug, 3: info, 2: warning, 1: error)
blackfire_log_level: 1

# Sets the socket the agent should read traces from.
# Possible value can be a unix socket or a TCP address. ie: unix:///var/run/blackfire/agent.sock or tcp://127.0.0.1:8307
blackfire_socket: "unix:///var/run/blackfire/agent.sock"

# Sets the URL of Blackfire's data collector
blackfire_collector: https://blackfire.io

# Restart apache after the activation of blackfire php extension
blackfire_apache_enable: false

# Restart php fpm after the activation of blackfire php extension
blackfire_php_fpm_enable: false
