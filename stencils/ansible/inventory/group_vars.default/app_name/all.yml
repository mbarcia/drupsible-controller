---
#
# Configuration file for ALL servers in ALL the environments.
#
# The web application name, used as identifier in many contexts
# Set by configure.sh
app_name: example-project
# Drupal major version, 7 or 8
# Set by configure.sh
app_drupal_version: '8'

# String to identify the build based on today's date like 20201224_1824
app_build_id: "{{ ansible_date_time['year'] }}{{ ansible_date_time['month'] }}{{ ansible_date_time['day'] }}_{{ ansible_date_time['hour'] }}{{ ansible_date_time['minute'] }}"

# OS username
# Set by configure.sh
app_user: example-project
# OS group. This group needs to match apache2 group
app_group: www-data
# Add the website's other internet domains, as needed
app_server_aliases:
- "{{ app_webdomain }}"
# Listen socket for PHP-FPM to communicate with Apache2
app_fpm_listen_uds: '/var/run/php-fpm-{{ app_name }}.sock'
# Listen port for PHP-FPM to communicate with Apache2. Socket is faster, but
# only available on Apache 2.4.10+
app_fpm_listen: '127.0.0.1:9000'
# Website administrator's email
app_admin_email: "admin@{{ app_webdomain }}"
# DB name
app_db_name: "{{ app_name }}"
# DU username. MySQL limits this value to 16 chars.
app_db_user: "{{ app_name|truncate(16) }}"
# Should Drupsible create a new DB for the build DB
app_db_create_for_build_enabled: False
# Should Drupsible setup and configure memcached?
app_memcache_storage_enabled: "{{ 'memcache_storage' in (deploy_modules_present_app + deploy_modules_present_env + deploy_drupal7_projects_base|d([]) + deploy_drupal7_projects|d([]) + deploy_drupal8_projects_base|d([]) + deploy_drupal8_projects|d([]) ) }}"
app_memcache_enabled: "{{ 'memcache' in (deploy_modules_present_app + deploy_modules_present_env + deploy_drupal7_projects_base|d([]) + deploy_drupal7_projects|d([]) + deploy_drupal8_projects_base|d([]) + deploy_drupal8_projects|d([]) ) }}"
app_memcached_enabled: "{{ app_memcache_storage_enabled or app_memcache_enabled }}"
# Should Drupsible setup everything for the website to be accessed with https?
app_https_enabled: no
# Should Drupsible setup everything for the website to have a Varnish front-end?
app_varnish_enabled: yes
# Alternative http port, used by Apache2 when Varnish is enabled
app_apache2_alt_port: 8080
# Default path name under /var/www/app for index.php (by default placed in /var/www/app_name/public_html)
app_public_html_folder: public_html

# Is your app multilingual?
# Set by configure.sh
app_i18n_enabled: False
# Please place default language first in this list
# Set by configure.sh
app_languages: []

# Default timezone
app_timezone: 'Europe/Madrid'

# Switch to yes if in a cloud environment where the IPs of the servers
# are dynamic (not static/fixed at provision/config time)
app_in_cloud: no

# Ferm (firewall) enabled
app_ferm_enabled: "{{ (app_in_cloud|bool) | ternary(False, True) }}"
# tcpwrappers (/etc/hosts.deny|allow) enabled
app_tcpwrappers_enabled: "{{ (app_in_cloud|bool) | ternary(False, True) }}"

#
# Postfix defaults
#

# Credentials are global
postfix_smtp_sasl_password_map_per_host: False

#
# Debops sshd defaults
#

sshd__custom_options: |
  # Drupsible - disable DNS lookups and negotiation of slow GSSAPI
  UseDNS no
  GSSAPIAuthentication no

#
# Debops console configuration.
#

# Do NOT manage root account for now.
console_root: False

# Copy .nanorc from Ansible Controller to remote hosts.
console_custom_files:
- src: 'files/filedotnanorc'
  dest: '/home/{{ app_user }}/.nanorc'
  owner: '{{ app_user }}'
  group: '{{ app_group }}'

# Make nano the preferred editor.
console_preferred_editors:
- '/bin/nano'
- '/usr/bin/vim.basic'
- '/usr/bin/emacs24'
- '/usr/bin/vim.tiny'
- '/bin/ed'

# Drupal 8 cache tags header
app_cache_tag_header_request: Cache-Tags
